利用哈希表存储：

class Solution {
public:
    int countCharacters(vector<string>& words, string chars) {
        unordered_map<char,int> char_int;
        for(char c : chars)
        {
            char_int[c]++;
        }

        int ans = 0;
        for(string s : words)
        {
            unordered_map<char,int> s_int;
            for(char c : s)
            {
                s_int[c]++;
            }
            bool is_big = true;
            
            for(char c : s)
            {
                if(char_int[c]<s_int[c])
                {
                    is_big = false;
                    break;
                }
                
            }
            if(is_big)
            ans += s.size();
        }
        return ans;

    }
};



利用哈希表效率太低了，这里用数组进行存储：

class Solution {
    vector<int> count(string chars)
    {
        vector<int> p(26,0);
        for(char c : chars)
        {
            p[c-'a']++;
        }
        return p;

    }
    bool is_ans(vector<int> chars_int,vector<int> s_int)
    {
        for(int i = 0;i<26;i++)
        {
            if(chars_int[i]<s_int[i])
            return false;
        }
        return true;
    }
public:
    int countCharacters(vector<string>& words, string chars) {

        vector<int> chars_int = count(chars);
        int ans = 0;
        for(string s : words)
        {
            vector<int> s_int = count(s);
            if(is_ans(chars_int,s_int))
            ans += s.size();
        }
        return ans;
    }
};
