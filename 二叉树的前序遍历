递归：

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
    private:
    vector<int> res;
public:
    vector<int> preorderTraversal(TreeNode* root) {
        
        if(root)
        {
        res.push_back(root->val);
        preorderTraversal(root->left);
        preorderTraversal(root->right);
        }

        return res;

    }
};

利用栈进行迭代：
class Solution {
    private:
    vector<int> res;
    stack<TreeNode *> mystack;
public:
    vector<int> preorderTraversal(TreeNode* root) {
        TreeNode *p = root;
        while(!mystack.empty()||p)
        {
            while(p)
            {
                res.push_back(p->val);
                mystack.push(p);
                p=p->left;
            }
            TreeNode *q = mystack.top();
            mystack.pop();
            p = q->right;
        }
        return res;

    }
};
