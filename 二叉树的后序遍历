递归;
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
    private:
    vector<int> res;
public:
    vector<int> postorderTraversal(TreeNode* root) {
        if(root)
        {
            postorderTraversal(root->left);
            postorderTraversal(root->right);
            res.push_back(root->val);
        }
        return res;
    }
};

利用栈进行迭代：

class Solution {
    private:
    vector<int> res;
    stack<TreeNode *> mystack;
public:
    vector<int> postorderTraversal(TreeNode* root) {
        TreeNode *cur = root;
        TreeNode *pre = NULL;
        while(!mystack.empty()||cur)
        {
            while(cur)
            {
                mystack.push(cur);
                cur = cur->left;
            }
            cur = mystack.top();
            if(!cur->right || pre == cur->right)
            {
                res.push_back(cur->val);
                mystack.pop();
                pre = cur;
                cur = NULL;
            }
            else
            {
                cur = cur->right;
                pre = NULL;
            }
        }
        return res;
    }
};
