递归的方法：
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
    vector<int> res;
public:
    vector<int> inorderTraversal(TreeNode* root) {
        if(root)
        {
            inorderTraversal(root->left);
            res.push_back(root->val);
            inorderTraversal(root->right);
        }
        return res;
    }
};


利用栈进行迭代遍历：
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        TreeNode* p = root;
        vector<int> res;
        stack<TreeNode*> mystack;
        while(!mystack.empty()||p)
        {
            while(p)
            {
                mystack.push(p);
                p = p->left;
            }
            TreeNode *q = mystack.top();
            mystack.pop();
            res.push_back(q->val);
            p = q->right;
        }
        return res;
    }
};
